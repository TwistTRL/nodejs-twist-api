@startuml db-api-frontend

' skinparam componentStyle uml2

package "TWIST FRONT END" {
    frame "log in page" as login {
        [Auth] -- [MRN input]
    }

    frame "main page" as main {
        [RSS]
        [Body Container] -- [I/O Table]
        [Body Container] -- [Nutrition Table]
        [Body Container] -- [Medications]
        [Body Container] -- [Vitals]
        [Nutrition Table] -- [Nutrition Volume]
        [Nutrition Table] -- [Nutrition fat-pro-cho]
        [I/O Table] -- [I/O stack bar]
        [I/O Table] -- [I/O modal]
        [Medications]
    }
    login -[hidden]down- main
}

package "TWIST API" {
    package "single table fetch" {
        [TPN_LIPID]
        [EN]
        [TPN]
        [INTAKE_OUTPUT]
        [DRUG_INTERMITTENT]
        [DRUG_DILUENTS]
    }

    frame "cache" {
        [Initial Fetch] -left-> [Cache] :has cache
    }

    [Initial Fetch] -down-> dbConnector :no cache
    [TPN_LIPID] -down- dbConnector
    [EN] -down- dbConnector
    [TPN] -down- dbConnector
    [INTAKE_OUTPUT] -down- dbConnector
    [DRUG_INTERMITTENT] -down- dbConnector
    [DRUG_DILUENTS] -down- dbConnector

    frame "interface" {
        interface "fat-pro-cho" as fpc
        interface volume
        interface "inout-tooltip" as iot
        interface inout
        interface med
        interface "weight-calc" as weightc
        interface others
        interface apiRSS
    }

    [Cache] -up-> volume
    [Cache] -up-> fpc
    [Cache] -up-> inout
    [Cache] -up-> iot
    [Cache] -up-> med
    [Cache] -up-> weightc
    [Cache] -up-> others
    [Cache] -up-> apiRSS

    [Cache] <-- [TPN_LIPID]
    [Cache] <-- [TPN]
    [Cache] <-- [EN]
    [Cache] <-- [INTAKE_OUTPUT]
    [Cache] <-- [DRUG_INTERMITTENT]
    [Cache] <-- [DRUG_DILUENTS]

}

database DWTST

[MRN input] -down-> [Initial Fetch]

[Nutrition Volume] <-- volume
[Nutrition fat-pro-cho] <-- fpc
[I/O stack bar] <-- inout
[I/O modal] <-- iot
[Medications] <-- med

' [RSS] <-- apiRSS

DWTST -up- dbConnector

@enduml