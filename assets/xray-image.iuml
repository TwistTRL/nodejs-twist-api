@startuml xray-image

skinparam componentStyle uml2

database "HOSPITAL DB" as db

node "SYNAPSE COMPUTER" as synapse #f1f8e9 {
    frame "Horos" as horos {
        interface "/Documents"
    }

    frame "10.7.46.53:7001" as imageAPI {
        component "nodejs-synapse-xray" as componentImageAPI
        interface "/images/index" as imageIndex
        interface "/images/base64/:id" as imageBase
        ' componentImageAPI -[hidden]down- imageIndex
        ' imageIndex -[hidden]down- imageBase
    }

    horos -- imageAPI
}

node "TRLDSC2 SERVER" as trldsc2 #e77722 {
    frame "trldsc2:7001" as trldsc2API {
        component "nodejs-trldsc2-xray" as trldsc2ImageAPI
        interface "/dicom"
        interface "/jpg"        
    }
}


node "TWIST SERVER" as twist #e0f7fa {
    frame "twist:3333" as twistAPI {
        component "nodejs-twist-api" as componentTwistAPI
        interface "/api/person-xray-image/:person_id" as apiPerson
        interface "/api/xray-image/:image_id" as apiImage
        ' componentTwistAPI -[hidden]down- apiPerson
        ' apiPerson -[hidden]down- apiImage
    }

    database "Redis Cache" as Redis #fbe9e7 {
    }

    twistAPI ~down~ Redis
}

database DWTST #LightYellow {
    frame dbCache {
        interface "xray-jpg" as xrayJpg
    }
}

package "FRONT END COMPUTERS" as frontEnd #Plum {
    frame "_" as imageFE {
        component "react-xray-image-example"
    }
}


synapse -[hidden]- trldsc2
trldsc2 -[hidden]- twist
twist -[hidden]- frontEnd
' DWTST -[hidden]- twist

db -down- horos
imageAPI -- trldsc2API
trldsc2API -- twistAPI
trldsc2API -up- dbCache
twistAPI -- imageFE

@enduml